#!/usr/bin/make -f

DEB_BUILDDIR = objdir

# This implements the .deb package creation using debhelper.
include /usr/share/cdbs/1/rules/debhelper.mk

# This implements building using a configure script and Makefile.
include /usr/share/cdbs/1/class/autotools.mk

# Override to only configure documentation.
DEB_CONFIGURE_SCRIPT = $(CURDIR)/gdb/doc/configure

# Rather paranoid than sorry. Make the shell exit with an error if an
# untested command fails.
SHELL += -e

INSTALL = /usr/bin/install -p
export INSTALL

DEB_MAKE_BUILD_TARGET = all info html

build/gdb-doc:: $(DEB_BUILDDIR)/html

$(DEB_BUILDDIR)/html:
	mkdir $(DEB_BUILDDIR)/html
	mv $(DEB_BUILDDIR)/gdb $(DEB_BUILDDIR)/html/
	mv $(DEB_BUILDDIR)/gdbint $(DEB_BUILDDIR)/html/
	mv $(DEB_BUILDDIR)/stabs $(DEB_BUILDDIR)/html/

common-binary-post-install-indep::
	rm -f debian/gdb-doc/usr/share/info/annota*
	install -d debian/gdb-doc/usr/share/doc/gdb
	ln -s ../gdb-doc/html debian/gdb-doc/usr/share/doc/gdb/html

post-patches::
	if ! test -f gdb/version.in.backup; then \
	  mv -f gdb/version.in gdb/version.in.backup; \
	  sed -e 's/$$/-debian/' < gdb/version.in.backup > gdb/version.in; \
	fi

clean::
	rm -rf $(DEB_BUILDDIR)
	if test -f gdb/version.in.backup; then \
	  mv -f gdb/version.in.backup gdb/version.in; \
	fi
